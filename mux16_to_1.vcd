$date
	Sat May 16 01:32:55 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module mux16_to_1_t $end
$scope module o1 $end
$var wire 8 ! a [7:0] $end
$var wire 8 " b [7:0] $end
$var wire 8 # c [7:0] $end
$var wire 8 $ d [7:0] $end
$var wire 8 % e [7:0] $end
$var wire 8 & f [7:0] $end
$var wire 8 ' g [7:0] $end
$var wire 8 ( h [7:0] $end
$var wire 8 ) i [7:0] $end
$var wire 8 * j [7:0] $end
$var wire 8 + k [7:0] $end
$var wire 8 , l [7:0] $end
$var wire 8 - m [7:0] $end
$var wire 8 . n [7:0] $end
$var wire 8 / o [7:0] $end
$var wire 8 0 p [7:0] $end
$var wire 4 1 sel [3:0] $end
$var reg 8 2 out [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10111 2
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b10111 !
$end
#50
b10 2
b1 1
b10 "
b0 !
#100
b11 2
b10 1
b11 #
b0 "
#150
b100 2
b11 1
b100 $
b0 #
#200
b101 2
b100 1
b101 %
b0 $
#250
b110 2
b101 1
b110 &
b0 %
#300
b111 2
b110 1
b111 '
b0 &
#350
b1000 2
b111 1
b1000 (
b0 '
#400
b1001 2
b1000 1
b1001 )
b0 (
#450
b1010 2
b1001 1
b1010 *
b0 )
#500
b1011 2
b1010 1
b1011 +
b0 *
#550
b1100 2
b1011 1
b1100 ,
b0 +
#600
b1101 2
b1100 1
b1101 -
b0 ,
#650
b1110 2
b1101 1
b1110 .
b0 -
#700
b1111 2
b1110 1
b1111 /
b0 .
#750
b10000 2
b1111 1
b10000 0
b0 /
#800
